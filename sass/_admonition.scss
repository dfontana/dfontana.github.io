// Adapted from
// https://github.com/squidfunk/mkdocs-material/blob/e2556d84d6b79989acd1f2dd3b8d4f1252a49a29/src/assets/stylesheets/main/extensions/markdown/_admonition.scss 

// TODO finish defining colors https://github.com/squidfunk/mkdocs-material/tree/master/src/assets/stylesheets
$clr-blue-a200: #06D6A0FF;
$clr-light-blue-a400: red;
$clr-cyan-a700: red;
$clr-teal-a700: red;
$clr-green-a700: red;
$clr-light-green-a700: red;
$clr-orange-a400: red;
$clr-red-a200: red;
$clr-red-a400: red;
$clr-pink-a400: red;
$clr-deep-purple-a200: red;
$clr-grey: red;

$alpha: 1.0;

$admonitions: (
  note:     pencil $clr-blue-a200,
  tldr:     clipboard-text $clr-light-blue-a400,
  info:     information $clr-cyan-a700,
  tip:      fire $clr-teal-a700,
  success:  check-bold $clr-green-a700,
  faq:      help-circle $clr-light-green-a700,
  warning:  alert $clr-orange-a400,
  failure:  close-thick $clr-red-a200,
  danger:   lightning-bolt $clr-red-a400,
  bug:      bug $clr-pink-a400,
  example:  format-list-numbered $clr-deep-purple-a200,
  cite:     format-quote-close $clr-grey
);

@function px2rem($value) {
    $remValue: ($value / 16) + rem; 
    @return $remValue;
}

// TODO need to create all the icon files and update the svg-load path
//      these names need to meet column one of the $admonitions values
//       https://github.com/squidfunk/mkdocs-material/tree/master/material/.icons/octicons
:root {
  --md-details-icon: url('/img/icon/chevron-right.svg');
  --md-accent-fg-color: $clr-blue-a200;

  --md-hue: 232;
  --md-admonition-fg-color: hsla(var(--md-hue), 75%, 95%, 1);
  --md-admonition-bg-color: hsla(var(--md-hue), 15%, 21%, 1);
  --md-shadow-z1: 
    0 #{px2rem(4)} #{px2rem(10)} hsla(0, 0%, 0%, 0.2),
    0 0            #{px2rem(1)}  hsla(0, 0%, 0%, 0.1);

  @each $names, $props in $admonitions {
    --md-admonition-icon--#{nth($names, 1)}:
      url('/img/icon/#{nth($props, 1)}.svg');
  }
}

// Color & Icon
@each $names, $props in $admonitions {
  $name: nth($names, 1);
  $tint: nth($props, 2);

  $flavours: ();
  @each $name in $names {
    $flavours: join($flavours, ".#{$name}", $separator: comma);
  }

  :is(.admonition, details):is(#{$flavours}) {
    border-color: $tint;
  }

  :is(#{$flavours}) > :is(.admonition-title, summary) {
      background-color: adjust-color($tint, $alpha: -0.9);

      // Admonition icon
      &::before {
        background-color: $tint;
        mask-image: var(--md-admonition-icon--#{$name});
        mask-repeat: no-repeat;
        mask-size: contain;
      }
    }
}

:is(.admonition, details) {
  display: flow-root;
  margin: px2rem(20) px2rem(12.8) 0;
  padding: 0 px2rem(12);
  color: var(--md-admonition-fg-color);
  font-size: px2rem(12.8);
  page-break-inside: avoid;
  background-color: var(--md-admonition-bg-color);
  border: 0 solid $clr-blue-a200;
  border-inline-start-width: px2rem(4);
  border-radius: px2rem(2);
  box-shadow: var(--md-shadow-z1);

  // [print]: Omit shadow as it may lead to rendering errors
  @media print {
    box-shadow: none;
  }

  // Hack: Chrome exhibits a weird issue where it will set nested elements to
  // content-box. Doesn't happen in other browsers, so looks like a bug.
  > * {
    box-sizing: border-box;
  }

  // Adjust vertical spacing for nested admonitions
  :is(.admonition, details) {
    margin-top: 1em;
    margin-bottom: 1em;
  }

  // Adjust spacing for contained table wrappers
  .md-typeset__scrollwrap {
    margin: 1em px2rem(-12);
  }

  // Adjust spacing for contained tables
  .md-typeset__table {
    padding: 0 px2rem(12);
  }

  // Adjust spacing for single-child tabbed block container
  > .tabbed-set:only-child {
    margin-top: 0;
  }

  // Adjust spacing on last child
  html & > :last-child {
    margin-bottom: px2rem(12);
  }
}

// Admonition title
:is(.admonition-title, summary) {
  position: relative;
  margin-block: 0;
  margin-inline: px2rem(-16) px2rem(-12);
  padding-block: px2rem(8);
  padding-inline: px2rem(44) px2rem(12);
  font-weight: 700;
  background-color: adjust-color($clr-blue-a200, $alpha: -0.9);
  border: none;
  border-inline-start-width: px2rem(4);
  border-start-start-radius: px2rem(2);
  border-start-end-radius: px2rem(2);

  // Adjust spacing for title-only admonitions
  html &:last-child {
    margin-bottom: 0;
  }

  // Admonition icon
  &::before {
    position: absolute;
    top: px2em(10);
    inset-inline-start: px2rem(16);
    width: px2rem(20);
    height: px2rem(20);
    background-color: $clr-blue-a200;
    mask-image: var(--md-admonition-icon--note);
    mask-repeat: no-repeat;
    mask-size: contain;
    content: "";
  }
}

details {
    display: flow-root;
    padding-top: 0;
    overflow: visible;

    // Details title icon - rotate icon on transition to open state
    &[open] > summary::after {
      transform: rotate(90deg);
    }

    // Adjust spacing for details in closed state
    &:not([open]) {
      padding-bottom: 0;
      box-shadow: none;

      // Hack: we cannot set `overflow: hidden` on the `details` element (which
      // is why we set it to `overflow: visible`, as the outline would not be
      // visible when focusing. Therefore, we must set the border radius on the
      // summary explicitly.
      > summary {
        border-radius: px2rem(2);
      }
    }
  }

  // Details title
  summary {
    display: block;
    min-height: px2rem(20);
    padding-inline-end: px2rem(36);
    border-start-start-radius: px2rem(2);
    border-start-end-radius: px2rem(2);
    cursor: pointer;

    // Show outline for keyboard devices
    &.focus-visible {
      outline-color: var(--md-accent-fg-color);
      outline-offset: px2rem(4);
    }

    // Hide outline for pointer devices
    &:not(.focus-visible) {
      outline: none;
      -webkit-tap-highlight-color: transparent;
    }

    // Details marker
    &::after {
      position: absolute;
      top: px2em(10);
      inset-inline-end: px2rem(8);
      width: px2rem(20);
      height: px2rem(20);
      background-color: currentcolor;
      mask-image: var(--md-details-icon);
      mask-repeat: no-repeat;
      mask-size: contain;
      transform: rotate(0deg);
      transition: transform 250ms;
      content: "";

      // Adjust for right-to-left languages
      [dir="rtl"] & {
        transform: rotate(180deg);
      }
    }

    // Hide native details marker - modern
    &::marker {
      display: none;
    }

    // Hide native details marker - legacy, must be split into a seprate rule,
    // so older browsers don't consider the selector list as invalid
    &::-webkit-details-marker {
      display: none;
    }
  }
